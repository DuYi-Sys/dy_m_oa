<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<TITLE>递归</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="JScript 教程">
<META NAME="MS-HKWD" CONTENT="recursion">
<META NAME="MS-HKWD" CONTENT="recursive 函数">
<META NAME="MS-HKWD" CONTENT="calling 函数">            

<META NAME=MS-HAID CONTENT="recurse">
<META NAME="MS.LOCALE" CONTENT="ZH-CN">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=gb2312">
<META NAME="PRODUCT" CONTENT="JScript">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Tutorial">
<META NAME="Description" CONTENT="Recursion">
<META NAME="Keywords" CONTENT="JScript tutorial; recursion; recursive functions; calling functions">

</HEAD>



<BODY BGCOLOR=FFFFFF LINK=#0033CC>

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE=" 宋体"  class='9v'>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=380>
<FONT class='9v' COLOR=#660033>Microsoft(R) JScript(R)</FONT><BR>
<FONT SIZE=5 COLOR=#660033><B>递归</B></FONT><br>
</TD>
<TD ALIGN=RIGHT>
<FONT class='9v' >&nbsp;<a href="jstutor.htm">JScript&nbsp教程</A><br><a href="jsreserved.htm">上一页</A><br><a href="scope.htm">下一页</A><P></FONT>


</TD></TR>
</TABLE><p>


<hr noshade class='9v' >
<blockquote>
递归是一种重要的编程技术。该方法用于让一个函数从其内部调用其自身。一个信手可得的示例就是计算阶乘。0 和 1 的阶乘都被特别地定义为 1。 更大数的阶乘是通过计算 1 * 2 * ...来求得的，每次增加 1，直至达到要计算其阶乘的那个数。<p>

下面的段落是用文字定义的计算阶乘的一个函数。<p>

“如果这个数小于零，则拒绝接收。如果不是一个整数，则将其向下舍入为相邻的整数。如果这个数为 0 或 1，则其阶乘为 1。如果这个数大于 1，则将其与相邻较小的数的阶乘相乘。”<p>

要计算任何大于 1 的数的阶乘，至少需要计算一个其他数的阶乘。用来实现这个功能的函数就是已经位于其中的函数；该函数在执行当前的这个数之前，必须调用它本身来计算相邻的较小数的阶乘。这就是一个递归示例。<p>

显然，这样有可能会出现问题。可以很容易地创建一个递归函数，但该函数不能得到一个确定的结果，并且不能达到一个终点。这样的递归将导致计算机执行一个“无限”循环。下面就是一个示例：在计算阶乘的文字描述中遗漏了第一条规则（对负数的处理） ，并试图计算任何负数的阶乘。这将导致失败，因为按顺序计算 -24 的阶乘时，首先不得不计算 -25 的阶乘；然而这样又不得不计算 -26 的阶乘；如此继续。很明显，这样永远也不会到达一个终止点。<p>

因此在设计递归函数时应特别仔细。如果怀疑其中存在着无限递归的可能，则可以让该函数记录它调用自身的次数。如果该函数调用自身的次数太多，即使您已决定了它应调用多少次，就自动退出。<p>

下面仍然是阶乘函数，这次是用 JScript 代码编写的。
<BLOCKQUOTE><pre><FONT face=" 宋体" class='9v' >function factorial(aNumber)  {
aNumber = Math.floor(aNumber);  // 如果这个数不是一个整数，则向下舍入。
if (aNumber &lt; 0)  {  // 如果这个数小于 0，拒绝接收。
    return "not a defined quantity";
    }
      if ((anumber == 0) || (anumber == 1))  {  // 如果为 0 或 1，则其阶乘为 1。
      return 1;
      }
        else return (anumber * factorial(anumber - 1));  // 否则，递归直至完成。
}
</FONT></pre></BLOCKQUOTE>
</BLOCKQUOTE>


<hr noshade class='9v' >

<!--COPYRIGHT BEGIN--><!--COPYRIGHT END--> 
</FONT>
</BODY>
</HTML>


















